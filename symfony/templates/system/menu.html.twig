{% extends '@KnpMenu/menu.html.twig' %}

{% block root %}
    {% set listAttributes = item.childrenAttributes %}
    <div id="layoutSidenav_nav">
        <nav class="sb-sidenav accordion sb-sidenav-dark bg-secondary" id="sidenavAccordion">
            <div class="sb-sidenav-menu mt-2">
                <div class="nav">
                    {{ block('list') -}}
                </div>
            </div>
        </nav>
    </div>
{% endblock %}

{% block list %}
    {% if item.hasChildren and options.depth is not same as(0) and item.displayChildren %}
        {% import _self as knp_menu %}
        {{ block('children') }}
    {% endif %}
{% endblock %}

{% block children %}
    {# save current variables #}
    {% set currentOptions = options %}
    {% set currentItem = item %}
    {# update the depth for children #}
    {% if options.depth is not none %}
        {% set options = options|merge({'depth': currentOptions.depth - 1}) %}
    {% endif %}
    {# update the matchingDepth for children #}
    {% if options.matchingDepth is not none and options.matchingDepth > 0 %}
        {% set options = options|merge({'matchingDepth': currentOptions.matchingDepth - 1}) %}
    {% endif %}

    {% if currentItem.level != 0 %}
        <div id="{% if currentItem.linkattributes['data-bs-target'] is defined %}{{ currentItem.linkattributes['data-bs-target']|trim('#', 'left') }}{% endif %}" class="collapse" aria-labelledby="headingPages" data-parent="#sidenavAccordion">
        <nav class="sb-sidenav-menu-nested nav">
    {% endif %}
    {% for item in currentItem.children %}
        {{ block('item') }}
    {% endfor %}
    {% if currentItem.level != 0 %}
        </nav>
        </div>
    {% endif %}

    {# restore current variables #}
    {% set item = currentItem %}
    {% set options = currentOptions %}
{% endblock %}

{% block item %}
    {% if item.displayed %}
        {# building the class of the item #}
        {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
        {%- if matcher.isCurrent(item) %}
            {%- set classes = classes|merge([options.currentClass]) %}
        {%- elseif matcher.isAncestor(item, options.matchingDepth) %}
            {%- set classes = classes|merge([options.ancestorClass]) %}
        {%- endif %}
        {%- if item.actsLikeFirst %}
            {%- set classes = classes|merge([options.firstClass]) %}
        {%- endif %}
        {%- if item.actsLikeLast %}
            {%- set classes = classes|merge([options.lastClass]) %}
        {%- endif %}

        {# Mark item as "leaf" (no children) or as "branch" (has children that are displayed) #}
        {% if item.hasChildren and options.depth is not same as(0) %}
            {% if options.branch_class is not empty and item.displayChildren %}
                {%- set classes = classes|merge([options.branch_class]) %}
            {% endif %}
        {% elseif options.leaf_class is not empty %}
            {%- set classes = classes|merge([options.leaf_class]) %}
        {%- endif %}

        {%- set attributes = item.attributes %}
        {%- set classes = classes|merge(['nav-item']) %}
        {%- if classes is not empty %}
            {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
        {%- endif %}
        {# displaying the item #}
        {% import _self as knp_menu %}

        {% if item.level == 1 %}
            {%- if item.uri is not empty and (not matcher.isCurrent(item) or options.currentAsLink) %}
                {{ block('linkElement') }}
            {%- else %}
                {{ block('spanElement') }}
            {%- endif %}
            {# render the list of children#}
            {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}
            {%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}
            {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}
            {{ block('list') }}
        {% else %}
            <a class="nav-link{%- if matcher.isCurrent(item) %} current{% endif -%}" href="{{ item.uri }}">
                {% if item.extra('icon') %}
                    <div class="sb-nav-link-icon">
                        <i class="{{ item.extra('icon') }}"></i>
                    </div>
                {% endif %}
                <span>{{ block('label') }}</span>
            </a>
        {% endif %}
    {% endif %}
{% endblock %}

{% block linkElement %}
    {% import _self as knp_menu %}
    <a{{ knp_menu.attributes(item.linkAttributes) }} href="{{ item.uri }}">
        {% if item.extra('icon') %}
            <div class="sb-nav-link-icon">
                <i class="{{ item.extra('icon') }}"></i>
            </div>
        {% endif %}
        <span>{{ block('label') }}</span>
        {% if item.hasChildren %}
            <div class="sb-sidenav-collapse-arrow">
                <i class="fas fa-angle-down"></i>
            </div>
        {% endif %}
    </a>
{% endblock %}
