security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        App\Entity\User:
            algorithm: argon2id
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\LoginFormAuthenticator

            logout:
                path: app_logout
                target: app_login
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/logout, roles: ROLE_USER }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

    role_hierarchy:
        ROLE_SUPERADMIN: [ROLE_ADMINISTRATION, ROLE_INVESTIGATOR, ROLE_COORDINATOR, ROLE_PHARMACOVIGILANCE, ROLE_MONITOR]

        ROLE_ADMINISTRATION: [ROLE_COORDINATOR, ROLE_USER] # Osoba administracyjna TODO: czy w ogóle i jakie uprawnienia

        ROLE_INVESTIGATOR: ROLE_VISIT_PERFORMER # Badacz
        ROLE_COORDINATOR: ROLE_VISIT_PERFORMER # Koordynator

        ROLE_PHARMACOVIGILANCE: ROLE_USER # Pharmacovigilance
        ROLE_MONITOR: ROLE_USER #Monitor

        ROLE_VISIT_PERFORMER: ROLE_USER # Osoba, która może wykonywać wizyty